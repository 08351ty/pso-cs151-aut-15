#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 4955 0 4 3 49
#";; CMSC 15100, Autumn 2015, University of Chicago"
0 0 4 29 1 #"\n"
0 0 4 3 12 #";; Project A"
0 0 4 29 1 #"\n"
0 0 4 3 24 #";; prepared by Adam Shaw"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 76
(
 #";; You are allowed to use this code in subsequent projects. If you c"
 #"hoose to"
) 0 0 4 29 1 #"\n"
0 0 4 3 58 #";; use any part of this in your own work, cite it clearly."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"#lang typed/racket"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 7 #"require"
0 0 4 3 1 #" "
0 0 4 3 30 #"typed/test-engine/racket-tests"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 7 #"require"
0 0 4 3 1 #" "
0 0 4 3 17 #"typed/2htdp/image"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 7 #"require"
0 0 4 3 1 #" "
0 0 4 3 28 #"\"../include/uchicago151.rkt\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 7 #"provide"
0 0 4 3 2 #" ("
0 0 4 3 15 #"all-defined-out"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 23 #";; === data definitions"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 13 #"define-struct"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"  (["
0 0 4 3 1 #"x"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 11 #"define-type"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 1 #"U"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 11 #"define-type"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 1 #"U"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"  (["
0 0 4 3 3 #"row"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 4 #"]   "
0 0 4 3 35 #";; an integer on the interval [0,5]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ["
0 0 4 3 3 #"col"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 4 #"])) "
0 0 4 3 35 #";; an integer on the interval [0,5]"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 11 #"define-type"
0 0 4 3 1 #" "
0 0 4 3 8 #"Quadrant"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 1 #"U"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 2 #"SE"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 11 #"define-type"
0 0 4 3 1 #" "
0 0 4 3 9 #"Direction"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 1 #"U"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"clockwise"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 16 #"counterclockwise"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"  (["
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 4 #"))] "
0 0 4 3 34 #";; these are all lists of length 9"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ["
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ["
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ["
0 0 4 3 2 #"SE"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"  (["
0 0 4 3 5 #"board"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ["
0 0 4 3 11 #"next-player"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ["
0 0 4 3 11 #"next-action"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 1 #"U"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"place"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"twist"
0 0 4 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 11 #"define-type"
0 0 4 3 1 #" "
0 0 4 3 7 #"Outcome"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 1 #"U"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 3 #"tie"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 32 #";; === general purpose utilities"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"isNone?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"All"
0 0 4 3 2 #" ("
0 0 4 3 1 #"a"
0 0 4 3 3 #") ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 2 #") "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #";; return true iff x is 'none"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 7 #"isNone?"
0 0 4 3 1 #" "
0 0 4 3 1 #"x"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"x"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ["
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ["
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 2 #"#f"
0 0 4 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"isSome?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"All"
0 0 4 3 2 #" ("
0 0 4 3 1 #"a"
0 0 4 3 3 #") ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 2 #") "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #";; return true iff x is (Some _)"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 7 #"isSome?"
0 0 4 3 1 #" "
0 0 4 3 1 #"x"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"x"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 2 #") "
0 0 4 3 2 #"#t"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ["
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 2 #"#f"
0 0 4 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"opt=?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"All"
0 0 4 3 2 #" ("
0 0 4 3 1 #"a"
0 0 4 3 3 #") ("
0 0 4 3 1 #"a"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 2 #") "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 3 #") ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 2 #") "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 73
(
 #";; makes an equality tester for (Optional a), given an equality test"
 #" on a"
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 5 #"opt=?"
0 0 4 3 1 #" "
0 0 4 3 2 #"=?"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 2 #"\316\273"
0 0 4 3 3 #" (["
0 0 4 3 4 #"opt1"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 4 #")] ["
0 0 4 3 4 #"opt2"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 6 #"match*"
0 0 4 3 2 #" ("
0 0 4 3 4 #"opt1"
0 0 4 3 1 #" "
0 0 4 3 4 #"opt2"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"      [("
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 2 #") "
0 0 4 3 2 #"#t"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"      [(("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"x"
0 0 4 3 3 #") ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 4 #")) ("
0 0 4 3 2 #"=?"
0 0 4 3 1 #" "
0 0 4 3 1 #"x"
0 0 4 3 1 #" "
0 0 4 3 1 #"y"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"      [("
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 2 #") "
0 0 4 3 2 #"#f"
0 0 4 3 4 #"])))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 23 #";; === boards and games"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 13 #"initial-board"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #";; empty board"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 13 #"initial-board"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"local"
0 0 4 3 3 #" {("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"e"
0 0 4 3 2 #" ("
0 0 4 3 9 #"make-list"
0 0 4 3 1 #" "
0 0 4 3 1 #"9"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 3 #"))}"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 1 #"e"
0 0 4 3 1 #" "
0 0 4 3 1 #"e"
0 0 4 3 1 #" "
0 0 4 3 1 #"e"
0 0 4 3 1 #" "
0 0 4 3 1 #"e"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 8 #"new-game"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #";; empty board, white's turn to place a marble"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 8 #"new-game"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 13 #"initial-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"place"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 6 #"Symbol"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 51 #";; makes a quadrant out of a symbol like 'wwb----bb"
0 0 4 29 1 #"\n"
0 0 4 3 21 #";; useful for testing"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"s"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"local"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    {("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"Char"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")) "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"       ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"         [("
0 0 4 3 2 #"or"
0 0 4 3 1 #" "
0 0 4 3 3 #"#\\w"
0 0 4 3 1 #" "
0 0 4 3 3 #"#\\W"
0 0 4 3 3 #") ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"         [("
0 0 4 3 2 #"or"
0 0 4 3 1 #" "
0 0 4 3 3 #"#\\b"
0 0 4 3 1 #" "
0 0 4 3 3 #"#\\B"
0 0 4 3 3 #") ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ["
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 4 #"]))}"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 3 #"map"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 2 #" ("
0 0 4 3 12 #"string->list"
0 0 4 3 2 #" ("
0 0 4 3 14 #"symbol->string"
0 0 4 3 1 #" "
0 0 4 3 1 #"s"
0 0 4 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--b----b"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 4 #"list"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                    ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 6 #"Symbol"
0 0 4 3 1 #" "
0 0 4 3 6 #"Symbol"
0 0 4 3 1 #" "
0 0 4 3 6 #"Symbol"
0 0 4 3 1 #" "
0 0 4 3 6 #"Symbol"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 34 #";; makes a board from four symbols"
0 0 4 29 1 #"\n"
0 0 4 3 21 #";; useful for testing"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 2 #"nw"
0 0 4 3 1 #" "
0 0 4 3 2 #"ne"
0 0 4 3 1 #" "
0 0 4 3 2 #"sw"
0 0 4 3 1 #" "
0 0 4 3 2 #"se"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"Board"
0 0 4 3 2 #" ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 2 #"nw"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 2 #"ne"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 2 #"sw"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 2 #"se"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 13 #"initial-board"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 14 #";; === Pentago"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 8 #"twist-cw"
0 0 4 3 3 #" (("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")) "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 40 #";; twist a quadrant 90 degrees clockwise"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 8 #"twist-cw"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 2 #"s0"
0 0 4 3 1 #" "
0 0 4 3 2 #"s1"
0 0 4 3 1 #" "
0 0 4 3 2 #"s2"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"s3"
0 0 4 3 1 #" "
0 0 4 3 2 #"s4"
0 0 4 3 1 #" "
0 0 4 3 2 #"s5"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"s6"
0 0 4 3 1 #" "
0 0 4 3 2 #"s7"
0 0 4 3 1 #" "
0 0 4 3 2 #"s8"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 2 #"s6"
0 0 4 3 1 #" "
0 0 4 3 2 #"s3"
0 0 4 3 1 #" "
0 0 4 3 2 #"s0"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"s7"
0 0 4 3 1 #" "
0 0 4 3 2 #"s4"
0 0 4 3 1 #" "
0 0 4 3 2 #"s1"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"s8"
0 0 4 3 1 #" "
0 0 4 3 2 #"s5"
0 0 4 3 1 #" "
0 0 4 3 2 #"s2"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ["
0 0 4 3 1 #"_"
0 0 4 3 2 #" ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 53 #"\"(Listof (Optional Player)) does not have nine items\""
0 0 4 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 8 #"twist-cw"
0 0 4 3 2 #" ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"www------"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--w--w--w"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 9 #"twist-ccw"
0 0 4 3 3 #" (("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")) "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 47 #";; twist a quadrant 90 degrees counterclockwise"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 9 #"twist-ccw"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 2 #"s0"
0 0 4 3 1 #" "
0 0 4 3 2 #"s1"
0 0 4 3 1 #" "
0 0 4 3 2 #"s2"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"s3"
0 0 4 3 1 #" "
0 0 4 3 2 #"s4"
0 0 4 3 1 #" "
0 0 4 3 2 #"s5"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"s6"
0 0 4 3 1 #" "
0 0 4 3 2 #"s7"
0 0 4 3 1 #" "
0 0 4 3 2 #"s8"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 2 #"s2"
0 0 4 3 1 #" "
0 0 4 3 2 #"s5"
0 0 4 3 1 #" "
0 0 4 3 2 #"s8"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"s1"
0 0 4 3 1 #" "
0 0 4 3 2 #"s4"
0 0 4 3 1 #" "
0 0 4 3 2 #"s7"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"s0"
0 0 4 3 1 #" "
0 0 4 3 2 #"s3"
0 0 4 3 1 #" "
0 0 4 3 2 #"s6"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ["
0 0 4 3 1 #"_"
0 0 4 3 2 #" ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 35 #"\"Quadrant does not have nine items\""
0 0 4 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"twist-ccw"
0 0 4 3 2 #" ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"www------"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--w--w--"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 12 #"replace-none"
0 0 4 3 3 #" (("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")) "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 71
(
 #";; put a piece at position i in the quadrant iff that position is em"
 #"pty"
) 0 0 4 29 1 #"\n"
0 0 4 3 47 #";; throw an error if something is already there"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 12 #"replace-none"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"local"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    {("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 2 #"lp"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")) "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 2 #"lp"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"       ("
0 0 4 3 6 #"match*"
0 0 4 3 2 #" ("
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"         [(("
0 0 4 3 4 #"cons"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 1 #" "
0 0 4 3 2 #"tl"
0 0 4 3 2 #") "
0 0 4 3 1 #"0"
0 0 4 3 3 #") ("
0 0 4 3 4 #"cons"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 2 #") "
0 0 4 3 2 #"tl"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"         [(("
0 0 4 3 4 #"cons"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 2 #") "
0 0 4 3 1 #"_"
0 0 4 3 2 #") "
0 0 4 3 1 #"0"
0 0 4 3 3 #") ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 33 #"\"There's already a marble there.\""
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"         [(("
0 0 4 3 4 #"cons"
0 0 4 3 1 #" "
0 0 4 3 2 #"hd"
0 0 4 3 1 #" "
0 0 4 3 2 #"tl"
0 0 4 3 2 #") "
0 0 4 3 1 #"i"
0 0 4 3 3 #") ("
0 0 4 3 4 #"cons"
0 0 4 3 1 #" "
0 0 4 3 2 #"hd"
0 0 4 3 2 #" ("
0 0 4 3 2 #"lp"
0 0 4 3 1 #" "
0 0 4 3 2 #"tl"
0 0 4 3 2 #" ("
0 0 4 3 4 #"sub1"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 4 #")))]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"         [("
0 0 4 3 1 #"'"
0 0 4 3 3 #"() "
0 0 4 3 1 #"_"
0 0 4 3 3 #") ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 7 #"\"empty\""
0 0 4 3 5 #")]))}"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 2 #"lp"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 12 #"replace-none"
0 0 4 3 2 #" ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"-wwbbbwww"
0 0 4 3 2 #") "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 14 #"quick-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"bwwbbbwww"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 9 #"board-ref"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 64
#";; return the optional marble at the given location on the board"
0 0 4 29 1 #"\n"
0 0 4 3 62
#";; some arithmetic is needed to determine the quadrant and the"
0 0 4 29 1 #"\n"
0 0 4 3 29 #";;   position in the quadrant"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 9 #"board-ref"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"l"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 6 #"match*"
0 0 4 3 2 #" ("
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"l"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"    [(("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 3 #"and"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 3 #") ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 5 #"local"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"           {("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                [("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 3 #") ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 2 #") "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                ["
0 0 4 3 4 #"else"
0 0 4 3 2 #" ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 2 #") "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 5 #")]))}"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"           ("
0 0 4 3 8 #"list-ref"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 2 #" ("
0 0 4 3 1 #"+"
0 0 4 3 2 #" ("
0 0 4 3 1 #"*"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 2 #" ("
0 0 4 3 9 #"remainder"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 4 #")) ("
0 0 4 3 9 #"remainder"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 5 #"error"
0 0 4 3 2 #" ("
0 0 4 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 4 3 30 #"\"location out of bounds: row \""
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                               ("
0 0 4 3 14 #"number->string"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 2 #") "
0 0 4 3 7 #"\" col \""
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                               ("
0 0 4 3 14 #"number->string"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 7 #"))))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"board-ref"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"board-ref"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"board-ref"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"board-ref"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"board-ref"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #"'"
0 0 4 3 9 #"b--------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 11 #"place-piece"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 8 #"Quadrant"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 53 #";; put the piece at the given position iff it's empty"
0 0 4 29 1 #"\n"
0 0 4 3 62
#";; throws an error, via replace-none, if the place is not open"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 11 #"place-piece"
0 0 4 3 1 #" "
0 0 4 3 2 #"bd"
0 0 4 3 1 #" "
0 0 4 3 3 #"qid"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"pquad"
0 0 4 3 3 #" (("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")) "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 5 #"pquad"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 12 #"replace-none"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 2 #"bd"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 3 #"qid"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"       ["
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 2 #" ("
0 0 4 3 5 #"pquad"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 2 #") "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"       ["
0 0 4 3 1 #"'"
0 0 4 3 2 #"NE"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 2 #" ("
0 0 4 3 5 #"pquad"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 2 #") "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"       ["
0 0 4 3 1 #"'"
0 0 4 3 2 #"SW"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 2 #" ("
0 0 4 3 5 #"pquad"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 2 #") "
0 0 4 3 2 #"SE"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"       ["
0 0 4 3 1 #"'"
0 0 4 3 2 #"SE"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 2 #" ("
0 0 4 3 5 #"pquad"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 7 #"))])]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 11 #"place-piece"
0 0 4 3 1 #" "
0 0 4 3 13 #"initial-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"other"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #";; toggle player"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 5 #"other"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 2 #" ["
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 3 #"] ["
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 12 #"place-marble"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 72
(
 #";; place marble iff it's the player's turn and the next action is 'p"
 #"lace"
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 12 #"place-marble"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #" "
0 0 4 3 1 #"l"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"twist"
0 0 4 3 3 #") ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 16 #"\"Twist is next.\""
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"place"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 3 #"and"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #" ("
0 0 4 3 7 #"Loc-row"
0 0 4 3 1 #" "
0 0 4 3 1 #"l"
0 0 4 3 2 #") "
0 0 4 3 1 #"5"
0 0 4 3 3 #") ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #" ("
0 0 4 3 7 #"Loc-col"
0 0 4 3 1 #" "
0 0 4 3 1 #"l"
0 0 4 3 2 #") "
0 0 4 3 1 #"5"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 8 #"symbol=?"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"             ("
0 0 4 3 4 #"Game"
0 0 4 3 2 #" ("
0 0 4 3 11 #"place-piece"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 2 #" ("
0 0 4 3 7 #"quad-of"
0 0 4 3 1 #" "
0 0 4 3 1 #"l"
0 0 4 3 3 #") ("
0 0 4 3 8 #"index-of"
0 0 4 3 1 #" "
0 0 4 3 1 #"l"
0 0 4 3 2 #") "
0 0 4 3 1 #"p"
0 0 4 3 2 #") "
0 0 4 3 1 #"p"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"twist"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"             ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 31 #"\"It's the other player's turn.\""
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 16 #"\"Off the board.\""
0 0 4 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 12 #"place-marble"
0 0 4 3 1 #" "
0 0 4 3 8 #"new-game"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 4 #"Game"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 4 3 1 #"'"
0 0 4 3 5 #"twist"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 11 #"check-error"
0 0 4 3 2 #" ("
0 0 4 3 12 #"place-marble"
0 0 4 3 1 #" "
0 0 4 3 8 #"new-game"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 3 31 #"\"It's the other player's turn.\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"quad-of"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 8 #"Quadrant"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #";; determine which quadrant the location is in"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 7 #"quad-of"
0 0 4 3 1 #" "
0 0 4 3 3 #"loc"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 3 #"loc"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NE"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 2 #"SE"
0 0 4 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 7 #"quad-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 3 #")) "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 7 #"quad-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 3 #")) "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NE"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 7 #"quad-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 3 #")) "
0 0 4 3 1 #"'"
0 0 4 3 2 #"SW"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 7 #"quad-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 3 #")) "
0 0 4 3 1 #"'"
0 0 4 3 2 #"SE"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 8 #"index-of"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 66
#";; compute the list position of given location within its quadrant"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 8 #"index-of"
0 0 4 3 1 #" "
0 0 4 3 3 #"loc"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 3 #"loc"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 1 #"+"
0 0 4 3 2 #" ("
0 0 4 3 1 #"*"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 2 #" ("
0 0 4 3 9 #"remainder"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 4 #")) ("
0 0 4 3 9 #"remainder"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 8 #"index-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 3 #")) "
0 0 4 3 1 #"3"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 8 #"index-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"3"
0 0 4 3 3 #")) "
0 0 4 3 1 #"6"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 8 #"index-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 3 #")) "
0 0 4 3 1 #"8"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 8 #"index-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 3 #")) "
0 0 4 3 1 #"4"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 8 #"index-of"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 3 #")) "
0 0 4 3 1 #"8"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 11 #"twist-board"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 8 #"Quadrant"
0 0 4 3 1 #" "
0 0 4 3 9 #"Direction"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 55 #";; twist a quadrant of the board in the given direction"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 11 #"twist-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"d"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 5 #"local"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"       {("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 5 #"twist"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"          ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"d"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"            ["
0 0 4 3 1 #"'"
0 0 4 3 9 #"clockwise"
0 0 4 3 1 #" "
0 0 4 3 8 #"twist-cw"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"            ["
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 9 #"twist-ccw"
0 0 4 3 4 #"]))}"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"       ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ["
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 2 #" ("
0 0 4 3 5 #"twist"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 2 #") "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ["
0 0 4 3 1 #"'"
0 0 4 3 2 #"NE"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 2 #" ("
0 0 4 3 5 #"twist"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 2 #") "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ["
0 0 4 3 1 #"'"
0 0 4 3 2 #"SW"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 2 #" ("
0 0 4 3 5 #"twist"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 2 #") "
0 0 4 3 2 #"SE"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"         ["
0 0 4 3 1 #"'"
0 0 4 3 2 #"SE"
0 0 4 3 2 #" ("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 2 #" ("
0 0 4 3 5 #"twist"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 8 #"))]))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 11 #"twist-board"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 9 #"clockwise"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--w------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 11 #"twist-board"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 16 #"counterclockwise"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"------w--"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 14 #"twist-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 8 #"Quadrant"
0 0 4 3 1 #" "
0 0 4 3 9 #"Direction"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 47 #";; twist-quadrant and advance to new game state"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 14 #"twist-quadrant"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"d"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 2 #"pl"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"twist"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 4 #"Game"
0 0 4 3 2 #" ("
0 0 4 3 11 #"twist-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #" "
0 0 4 3 1 #"d"
0 0 4 3 3 #") ("
0 0 4 3 5 #"other"
0 0 4 3 1 #" "
0 0 4 3 2 #"pl"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"place"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ["
0 0 4 3 1 #"_"
0 0 4 3 2 #" ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 25 #"\"It's not time to twist.\""
0 0 4 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 14 #"twist-quadrant"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Game"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 4 3 1 #"'"
0 0 4 3 5 #"twist"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 4 3 1 #"'"
0 0 4 3 2 #"NW"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 4 3 1 #"'"
0 0 4 3 9 #"clockwise"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Game"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--w------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 4 3 1 #"'"
0 0 4 3 5 #"place"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 43 #";; === test game end and victory conditions"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"full?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 54 #";; return true iff the board has no empty spaces on it"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 5 #"full?"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 6 #"andmap"
0 0 4 3 2 #" ("
0 0 4 3 4 #"inst"
0 0 4 3 1 #" "
0 0 4 3 7 #"isSome?"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #") ("
0 0 4 3 6 #"append"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 5 #"full?"
0 0 4 3 1 #" "
0 0 4 3 13 #"initial-board"
0 0 4 3 2 #") "
0 0 4 3 2 #"#f"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 5 #"full?"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"wwwwwwwww"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"wwwwwwwww"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"bbbbbbbbb"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"bbbbbbbbb"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 28 #"eastward-row-starting-points"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 63
#";; these are the 12 spaces from which an eastward row can start"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 28 #"eastward-row-starting-points"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 10 #"build-list"
0 0 4 3 1 #" "
0 0 4 3 2 #"12"
0 0 4 3 2 #" ("
0 0 4 3 2 #"\316\273"
0 0 4 3 3 #" (["
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 4 #"]) ("
0 0 4 3 3 #"Loc"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 3 #") ("
0 0 4 3 9 #"remainder"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 29 #"southward-col-starting-points"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 66
#";; these are the 12 spaces from which a southward column can start"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 29 #"southward-col-starting-points"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 10 #"build-list"
0 0 4 3 1 #" "
0 0 4 3 2 #"12"
0 0 4 3 2 #" ("
0 0 4 3 2 #"\316\273"
0 0 4 3 3 #" (["
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 4 #"]) ("
0 0 4 3 3 #"Loc"
0 0 4 3 2 #" ("
0 0 4 3 9 #"remainder"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 3 #") ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 30 #"southeast-diag-starting-points"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 67
#";; these are the 4 spaces from which a southeast diagonal can start"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 30 #"southeast-diag-starting-points"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 4 #"list"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 30 #"southwest-diag-starting-points"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 67
#";; these are the 4 spaces from which a southwest diagonal can start"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 30 #"southwest-diag-starting-points"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 4 #"list"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 3 #") ("
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 2 #") "
0 0 4 3 2 #"->"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 70
(
 #";; make a Loc -> Loc function out of a row modifier and a col modifi"
 #"er"
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 9 #"do-to-row"
0 0 4 3 1 #" "
0 0 4 3 9 #"do-to-col"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 2 #"\316\273"
0 0 4 3 3 #" (["
0 0 4 3 3 #"loc"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 3 #"loc"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"      [("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 2 #" ("
0 0 4 3 9 #"do-to-row"
0 0 4 3 1 #" "
0 0 4 3 1 #"r"
0 0 4 3 3 #") ("
0 0 4 3 9 #"do-to-col"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 6 #"))])))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 3 #" (("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 4 #")) ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 3 #" (("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 4 #")) ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 3 #" (("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 4 #")) ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 3 #" (("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 3 #") ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 4 #")) ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 11 #"follow-five"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 2 #" ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 2 #") "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 53 #";; given the board, a player, a starting location and"
0 0 4 29 1 #"\n"
0 0 4 3 56 #";; a way to move from location to location, see if there"
0 0 4 29 1 #"\n"
0 0 4 3 53 #";; are five adjacent locations containing that player"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 11 #"follow-five"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #" "
0 0 4 3 5 #"start"
0 0 4 3 1 #" "
0 0 4 3 4 #"next"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"local"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    {("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 2 #"lp"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 4 3 59
#";; given location and number of squares remaining to check,"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 4 3 46 #";; return true if all squares contain player p"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 2 #"lp"
0 0 4 3 1 #" "
0 0 4 3 11 #"current-loc"
0 0 4 3 1 #" "
0 0 4 3 14 #"locs-remaining"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"       ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 5 #"zero?"
0 0 4 3 1 #" "
0 0 4 3 14 #"locs-remaining"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 3 2 #"#t"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"           ("
0 0 4 3 3 #"and"
0 0 4 3 3 #" (("
0 0 4 3 5 #"opt=?"
0 0 4 3 1 #" "
0 0 4 3 8 #"symbol=?"
0 0 4 3 3 #") ("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 3 #") ("
0 0 4 3 9 #"board-ref"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 11 #"current-loc"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                ("
0 0 4 3 2 #"lp"
0 0 4 3 2 #" ("
0 0 4 3 4 #"next"
0 0 4 3 1 #" "
0 0 4 3 11 #"current-loc"
0 0 4 3 3 #") ("
0 0 4 3 4 #"sub1"
0 0 4 3 1 #" "
0 0 4 3 14 #"locs-remaining"
0 0 4 3 6 #")))))}"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 2 #"lp"
0 0 4 3 1 #" "
0 0 4 3 5 #"start"
0 0 4 3 1 #" "
0 0 4 3 1 #"5"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 11 #"follow-five"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"www------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"ww-------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 11 #"follow-five"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--w--w--"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--w-----"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#f"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 11 #"follow-five"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--w--w--"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--w-----"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 11 #"follow-five"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w---w"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w----"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 3 #"Loc"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"              ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"row?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 66
#";; does the given player have five in a row anywhere on the board?"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 4 #"row?"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"ormap"
0 0 4 3 2 #" ("
0 0 4 3 2 #"\316\273"
0 0 4 3 3 #" (["
0 0 4 3 5 #"start"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 4 #"]) ("
0 0 4 3 11 #"follow-five"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #" "
0 0 4 3 5 #"start"
0 0 4 3 2 #" ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 4 3 28 #"eastward-row-starting-points"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 4 #"row?"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"www------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"ww-------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 4 #"row?"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"www------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"ww-------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#f"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 4 #"row?"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"wwwww----"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"------bbb"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"------bb-"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"col?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 69
(
 #";; does the given player have five in a column anywhere on the board"
 #"?"
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 4 #"col?"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"ormap"
0 0 4 3 2 #" ("
0 0 4 3 2 #"\316\273"
0 0 4 3 3 #" (["
0 0 4 3 5 #"start"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 4 #"]) ("
0 0 4 3 11 #"follow-five"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #" "
0 0 4 3 5 #"start"
0 0 4 3 2 #" ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 1 #" "
0 0 4 3 8 #"identity"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 4 3 29 #"southward-col-starting-points"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 4 #"col?"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"www------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"ww-------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#f"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 4 #"col?"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--w--w--"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w--w-----"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"diag?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 71
(
 #";; does the given player have five in a diagonal anywhere on the boa"
 #"rd?"
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 5 #"diag?"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 2 #"or"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ("
0 0 4 3 5 #"ormap"
0 0 4 3 2 #" ("
0 0 4 3 2 #"\316\273"
0 0 4 3 3 #" (["
0 0 4 3 5 #"start"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 4 #"]) ("
0 0 4 3 11 #"follow-five"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #" "
0 0 4 3 5 #"start"
0 0 4 3 2 #" ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 3 30 #"southeast-diag-starting-points"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ("
0 0 4 3 5 #"ormap"
0 0 4 3 2 #" ("
0 0 4 3 2 #"\316\273"
0 0 4 3 3 #" (["
0 0 4 3 5 #"start"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"Loc"
0 0 4 3 4 #"]) ("
0 0 4 3 11 #"follow-five"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #" "
0 0 4 3 5 #"start"
0 0 4 3 2 #" ("
0 0 4 3 10 #"make-mover"
0 0 4 3 1 #" "
0 0 4 3 4 #"add1"
0 0 4 3 1 #" "
0 0 4 3 4 #"sub1"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 3 30 #"southwest-diag-starting-points"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 5 #"diag?"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w---w"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"---------"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w----"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 5 #"diag?"
0 0 4 3 2 #" ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w---w"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--b-b-b--"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--b-b----"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w----"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 9 #"has-five?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 36 #";; did the player get five in a row?"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 9 #"has-five?"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 2 #"or"
0 0 4 3 2 #" ("
0 0 4 3 4 #"row?"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 3 #") ("
0 0 4 3 4 #"col?"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 3 #") ("
0 0 4 3 5 #"diag?"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"has-five?"
0 0 4 3 1 #" "
0 0 4 3 8 #"new-game"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 2 #") "
0 0 4 3 2 #"#f"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"has-five?"
0 0 4 3 1 #" "
0 0 4 3 8 #"new-game"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 2 #") "
0 0 4 3 2 #"#f"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 9 #"has-five?"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Game"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"             ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w---w"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--b-b-b--"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--b-b----"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w----"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 3 1 #"'"
0 0 4 3 5 #"twist"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 29 1 #"\n"
0 0 4 3 2 #" ("
0 0 4 3 9 #"has-five?"
0 0 4 3 2 #" ("
0 0 4 3 4 #"Game"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"             ("
0 0 4 3 11 #"quick-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w---w"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--b-b-b--"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"--b-b----"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"w---w----"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 3 1 #"'"
0 0 4 3 5 #"twist"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 10 #"game-over?"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Boolean"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 20 #";; is the game over?"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 10 #"game-over?"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 2 #"or"
0 0 4 3 2 #" ("
0 0 4 3 9 #"has-five?"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"      ("
0 0 4 3 9 #"has-five?"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"      ("
0 0 4 3 5 #"full?"
0 0 4 3 2 #" ("
0 0 4 3 10 #"Game-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"outcome"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 7 #"Outcome"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 7 #"outcome"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 6 #"match*"
0 0 4 3 3 #" (("
0 0 4 3 9 #"has-five?"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 3 #") ("
0 0 4 3 9 #"has-five?"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 2 #"#t"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 3 #"tie"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 2 #"#t"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"white"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 2 #"#t"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 1 #"_"
0 0 4 3 1 #" "
0 0 4 3 1 #"_"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 3 #"tie"
0 0 4 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 20 #";; === visualization"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 12 #"square-image"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 2 #") "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Image"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 12 #"square-image"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"frame"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"   ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ["
0 0 4 3 1 #"'"
0 0 4 3 4 #"none"
0 0 4 3 2 #" ("
0 0 4 3 6 #"square"
0 0 4 3 1 #" "
0 0 4 3 2 #"30"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"solid"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"gainsboro"
0 0 4 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"     [("
0 0 4 3 4 #"Some"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 3 #") ("
0 0 4 3 7 #"overlay"
0 0 4 3 2 #" ("
0 0 4 3 6 #"circle"
0 0 4 3 1 #" "
0 0 4 3 2 #"10"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"solid"
0 0 4 3 1 #" "
0 0 4 3 1 #"p"
0 0 4 3 3 #") ("
0 0 4 3 6 #"square"
0 0 4 3 1 #" "
0 0 4 3 2 #"30"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"solid"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 9 #"gainsboro"
0 0 4 3 6 #"))])))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 14 #"quadrant-image"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 2 #" ("
0 0 4 3 6 #"Listof"
0 0 4 3 2 #" ("
0 0 4 3 8 #"Optional"
0 0 4 3 1 #" "
0 0 4 3 6 #"Player"
0 0 4 3 3 #")) "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Image"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 14 #"quadrant-image"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 2 #" ("
0 0 4 3 3 #"map"
0 0 4 3 1 #" "
0 0 4 3 12 #"square-image"
0 0 4 3 1 #" "
0 0 4 3 1 #"q"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #" "
0 0 4 3 1 #"d"
0 0 4 3 1 #" "
0 0 4 3 1 #"e"
0 0 4 3 1 #" "
0 0 4 3 1 #"f"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 5 #"above"
0 0 4 3 2 #" ("
0 0 4 3 6 #"beside"
0 0 4 3 1 #" "
0 0 4 3 1 #"a"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 1 #"c"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"            ("
0 0 4 3 6 #"beside"
0 0 4 3 1 #" "
0 0 4 3 1 #"d"
0 0 4 3 1 #" "
0 0 4 3 1 #"e"
0 0 4 3 1 #" "
0 0 4 3 1 #"f"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"            ("
0 0 4 3 6 #"beside"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 1 #"h"
0 0 4 3 1 #" "
0 0 4 3 1 #"i"
0 0 4 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 3 #"sbr"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Image"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #";; sbr = \"solid black rectangle\""
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 3 #"sbr"
0 0 4 3 1 #" "
0 0 4 3 5 #"width"
0 0 4 3 1 #" "
0 0 4 3 6 #"height"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 9 #"rectangle"
0 0 4 3 2 #" ("
0 0 4 3 3 #"max"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 5 #"width"
0 0 4 3 3 #") ("
0 0 4 3 3 #"max"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #" "
0 0 4 3 6 #"height"
0 0 4 3 2 #") "
0 0 4 3 1 #"'"
0 0 4 3 5 #"solid"
0 0 4 3 1 #" "
0 0 4 3 1 #"'"
0 0 4 3 5 #"black"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 14 #"scale-to-width"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Image"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Image"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 31 #";; scale image to desired width"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 14 #"scale-to-width"
0 0 4 3 1 #" "
0 0 4 3 3 #"img"
0 0 4 3 1 #" "
0 0 4 3 1 #"w"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"w"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"      ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 25 #"\"Width must be positive.\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"      ("
0 0 4 3 5 #"local"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"        {("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 6 #"scalar"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"           ("
0 0 4 3 1 #"/"
0 0 4 3 1 #" "
0 0 4 3 1 #"w"
0 0 4 3 2 #" ("
0 0 4 3 11 #"image-width"
0 0 4 3 1 #" "
0 0 4 3 3 #"img"
0 0 4 3 4 #")))}"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"        ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 6 #"scalar"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"            ("
0 0 4 3 5 #"error"
0 0 4 3 1 #" "
0 0 4 3 5 #"\"bug\""
0 0 4 3 2 #") "
0 0 4 3 43 #";; this is just to \"outwit\" the typechecker"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"            ("
0 0 4 3 5 #"scale"
0 0 4 3 1 #" "
0 0 4 3 6 #"scalar"
0 0 4 3 1 #" "
0 0 4 3 3 #"img"
0 0 4 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 11 #"board-image"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Image"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 11 #"board-image"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 5 #"Board"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"     ("
0 0 4 3 5 #"match"
0 0 4 3 2 #" ("
0 0 4 3 3 #"map"
0 0 4 3 1 #" "
0 0 4 3 14 #"quadrant-image"
0 0 4 3 2 #" ("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 2 #"NW"
0 0 4 3 1 #" "
0 0 4 3 2 #"NE"
0 0 4 3 1 #" "
0 0 4 3 2 #"SW"
0 0 4 3 1 #" "
0 0 4 3 2 #"SE"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"       [("
0 0 4 3 4 #"list"
0 0 4 3 1 #" "
0 0 4 3 2 #"i1"
0 0 4 3 1 #" "
0 0 4 3 2 #"i2"
0 0 4 3 1 #" "
0 0 4 3 2 #"i3"
0 0 4 3 1 #" "
0 0 4 3 2 #"i4"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"        ("
0 0 4 3 5 #"local"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"          {("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 2 #"\316\264"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"           ("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 6 #"vspace"
0 0 4 3 2 #" ("
0 0 4 3 3 #"sbr"
0 0 4 3 1 #" "
0 0 4 3 2 #"\316\264"
0 0 4 3 2 #" ("
0 0 4 3 12 #"image-height"
0 0 4 3 1 #" "
0 0 4 3 2 #"i1"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"           ("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 6 #"hspace"
0 0 4 3 2 #" ("
0 0 4 3 3 #"sbr"
0 0 4 3 2 #" ("
0 0 4 3 1 #"+"
0 0 4 3 1 #" "
0 0 4 3 2 #"\316\264"
0 0 4 3 2 #" ("
0 0 4 3 1 #"*"
0 0 4 3 1 #" "
0 0 4 3 1 #"2"
0 0 4 3 2 #" ("
0 0 4 3 11 #"image-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"i1"
0 0 4 3 4 #"))) "
0 0 4 3 2 #"\316\264"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"           ("
0 0 4 3 6 #"define"
0 0 4 3 1 #" "
0 0 4 3 6 #"result"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"             ("
0 0 4 3 5 #"above"
0 0 4 3 2 #" ("
0 0 4 3 6 #"beside"
0 0 4 3 1 #" "
0 0 4 3 2 #"i1"
0 0 4 3 1 #" "
0 0 4 3 6 #"vspace"
0 0 4 3 1 #" "
0 0 4 3 2 #"i2"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 4 3 6 #"hspace"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                    ("
0 0 4 3 6 #"beside"
0 0 4 3 1 #" "
0 0 4 3 2 #"i3"
0 0 4 3 1 #" "
0 0 4 3 6 #"vspace"
0 0 4 3 1 #" "
0 0 4 3 2 #"i4"
0 0 4 3 4 #")))}"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"          ("
0 0 4 3 14 #"scale-to-width"
0 0 4 3 1 #" "
0 0 4 3 6 #"result"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 7 #"))])]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 25 #";;change to byte for text"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 9 #"int->byte"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 13 #"Positive-Byte"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 9 #"int->byte"
0 0 4 3 1 #" "
0 0 4 3 1 #"n"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 2 #"<="
0 0 4 3 1 #" "
0 0 4 3 1 #"n"
0 0 4 3 1 #" "
0 0 4 3 1 #"1"
0 0 4 3 2 #") "
0 0 4 3 1 #"1"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 2 #">="
0 0 4 3 1 #" "
0 0 4 3 1 #"n"
0 0 4 3 1 #" "
0 0 4 3 3 #"255"
0 0 4 3 2 #") "
0 0 4 3 3 #"255"
0 0 4 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ["
0 0 4 3 4 #"else"
0 0 4 3 1 #" "
0 0 4 3 1 #"n"
0 0 4 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"int->byte"
0 0 4 3 1 #" "
0 0 4 3 3 #"256"
0 0 4 3 2 #") "
0 0 4 3 3 #"255"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 12 #"check-expect"
0 0 4 3 2 #" ("
0 0 4 3 9 #"int->byte"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 2 #") "
0 0 4 3 1 #"1"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 10 #"game-image"
0 0 4 3 1 #" "
0 0 4 3 1 #":"
0 0 4 3 1 #" "
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 7 #"Integer"
0 0 4 3 1 #" "
0 0 4 3 2 #"->"
0 0 4 3 1 #" "
0 0 4 3 5 #"Image"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 10 #"game-image"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"match"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"    [("
0 0 4 3 4 #"Game"
0 0 4 3 1 #" "
0 0 4 3 1 #"b"
0 0 4 3 1 #" "
0 0 4 3 2 #"pl"
0 0 4 3 1 #" "
0 0 4 3 3 #"act"
0 0 4 3 3 #") ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 1 #">"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 1 #"0"
0 0 4 3 3 #") ("
0 0 4 3 5 #"above"
0 0 4 3 2 #" ("
0 0 4 3 11 #"board-image"
0 0 4 3 2 #" ("
0 0 4 3 10 #"Game-board"
0 0 4 3 1 #" "
0 0 4 3 1 #"g"
0 0 4 3 2 #") "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                            ("
0 0 4 3 7 #"overlay"
0 0 4 3 2 #" ("
0 0 4 3 5 #"above"
0 0 4 3 2 #" ("
0 0 4 3 4 #"text"
0 0 4 3 2 #" ("
0 0 4 3 13 #"string-append"
0 0 4 3 2 #" ("
0 0 4 3 14 #"symbol->string"
0 0 4 3 1 #" "
0 0 4 3 2 #"pl"
0 0 4 3 2 #") "
0 0 4 3 9 #"\"'s turn\""
0 0 4 3 3 #") ("
0 0 4 3 9 #"int->byte"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"20"
0 0 4 3 3 #")) "
0 0 4 3 7 #"\"black\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 9 #"rectangle"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"35"
0 0 4 3 2 #") "
0 0 4 3 7 #"\"solid\""
0 0 4 3 1 #" "
0 0 4 3 11 #"\"gainsboro\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 4 #"text"
0 0 4 3 2 #" ("
0 0 4 3 14 #"symbol->string"
0 0 4 3 1 #" "
0 0 4 3 3 #"act"
0 0 4 3 3 #") ("
0 0 4 3 9 #"int->byte"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"20"
0 0 4 3 3 #")) "
0 0 4 3 7 #"\"black\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 9 #"rectangle"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"70"
0 0 4 3 2 #") "
0 0 4 3 7 #"\"solid\""
0 0 4 3 1 #" "
0 0 4 3 11 #"\"gainsboro\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 4 #"text"
0 0 4 3 1 #" "
0 0 4 3 74
(
 #"\"click on square to place ; click on quadrant to select quadrant to"
 #" twist\""
) 0 0 4 3 2 #" ("
0 0 4 3 9 #"int->byte"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"50"
0 0 4 3 3 #")) "
0 0 4 3 7 #"\"black\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 9 #"rectangle"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"70"
0 0 4 3 2 #") "
0 0 4 3 7 #"\"solid\""
0 0 4 3 1 #" "
0 0 4 3 11 #"\"gainsboro\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 4 #"text"
0 0 4 3 1 #" "
0 0 4 3 61
#"\"left arrow key to turn selected quadranted counterclockwise\""
0 0 4 3 2 #" ("
0 0 4 3 9 #"int->byte"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"50"
0 0 4 3 3 #")) "
0 0 4 3 7 #"\"black\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 9 #"rectangle"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"70"
0 0 4 3 2 #") "
0 0 4 3 7 #"\"solid\""
0 0 4 3 1 #" "
0 0 4 3 11 #"\"gainsboro\""
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                         ("
0 0 4 3 4 #"text"
0 0 4 3 1 #" "
0 0 4 3 53 #"\"right arrow key to turn selected quadrant clockwise\""
0 0 4 3 2 #" ("
0 0 4 3 9 #"int->byte"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 2 #"50"
0 0 4 3 3 #")) "
0 0 4 3 7 #"\"black\""
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                  ("
0 0 4 3 7 #"overlay"
0 0 4 3 2 #" ("
0 0 4 3 9 #"rectangle"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 2 #") "
0 0 4 3 9 #"\"outline\""
0 0 4 3 1 #" "
0 0 4 3 7 #"\"black\""
0 0 4 3 3 #") ("
0 0 4 3 9 #"rectangle"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 2 #" ("
0 0 4 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 4 3 13 #"desired-width"
0 0 4 3 1 #" "
0 0 4 3 1 #"4"
0 0 4 3 2 #") "
0 0 4 3 7 #"\"solid\""
0 0 4 3 1 #" "
0 0 4 3 11 #"\"gainsboro\""
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 4 3 11 #"empty-image"
0 0 4 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 4 #"test"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0           0
